#!/usr/bin/env bash

set -e

CONF=/etc/snapback.conf
PREFIX="$(hostname)_"

usage() {
  cat <<EOF
Usage: $0 <help|status|backup|prune>

Commands:
  status  Show number of archives, their resource usage and the date of
          the first and last archive
  backup  Create a new timestamped archive based on the commands and
          paths given in $CONF
  prune   Prunes archives keeping one per month, one par day this month and
          every archive for the current day
EOF
}

_get_archives() {
  tarsnap --list-archives 2>/dev/null | sort -nr
}

status() {
  local archives="$(_get_archives)"

  if [ -z "$archives" ]; then
    exit 0
  fi

  local total=$(wc -l <<<"$archives")
  local first=$(tail -n1 <<<"$archives")
  local last=$(head -n1 <<<"$archives")
  local sizes=$(tarsnap --print-stats --humanize-numbers 2>/dev/null \
                | grep -oE '[0-9.]+ [a-zA-Z]{2}')

  println() {
    printf "%-30s%20s\n" "$1:" "$2"
  }

  datefmt() {
    local stamp=${1#$PREFIX}
    printf $(date -d @$stamp +'%F %R')
  }

  println "Number of archives" "$total"
  println "Total raw" "$(echo "$sizes" | sed -n 1p)"
  println "Total compressed" "$(echo "$sizes" | sed -n 2p)"
  println "Deduped raw" "$(echo "$sizes" | sed -n 3p)"
  println "Deduped compressed" "$(echo "$sizes" | sed -n 4p)"
  println "From" "$(datefmt $first)"
  println "To" "$(datefmt $last)"
  printf "%50s\n" | tr ' ' '-'

  local width=${#total}
  for name in ${archives}; do
    printf "%${width}s.%$((49-$width))s\n" "$((total--))" "$(datefmt $name)\n"
  done
}

backup() {
  if [ ! -r $CONF ]; then
    printf "Unable to read %s\n" $CONF
    exit 78
  fi
  . $CONF

  local name="${PREFIX}$(date -u +%s)"
  local tmp="/tmp/$name"

  trap "rm -rf \"$tmp\"" EXIT INT TERM

  mkdir $tmp
  (
    cd $tmp

    for cmd in "${CMDS[@]}"; do
      sh -c "$cmd"
    done

    tarsnap -c -f "$name" $(find $tmp -type f) "${PATHS[@]}" &> /dev/null
  )
}

prune() {
  local archives="$(_get_archives)"
  local now="$(date -u +%s)"
  local day=$((60*60*24))
  local month=$(($day*30))
  local -A days
  local -A months

  prune() {
    tarsnap -d -f "$1" > /dev/null 2>&1
  }

  for archive in ${archives}; do
    local stamp=${archive#$PREFIX}
    local diff=$(($now - $stamp))

    if [ $diff -lt $day ]; then
      :
    elif [ $diff -lt $month ]; then
      local days_ago=$(($diff / $day))

      if [[ ${days[$days_ago]} ]]; then
        prune $archive
      else
        days[$days_ago]=1
      fi

    else
      local months_ago=$(($diff / $month))

      if [[ ${months[$months_ago]} ]]; then
        prune $archive
      else
        months[$months_ago]=1
      fi
    fi
  done
  :
}

case $1 in
  help|-h|--help)
    usage
    ;;
  status|s)
    status
    ;;
  backup|b)
    backup
    ;;
  prune|p)
    prune
    ;;
  *)
    usage
    exit 64
    ;;
esac
